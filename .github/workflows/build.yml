name: Create Tagged Release Prod

on:
  push:
    branches:
      - master

jobs:
  build:
    name: "Build Changelog & Release Prod"
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Download all modules
        run: |
          cd web && npm i
          npm install @mantine/core @mantine/hooks @mantine/nprogress @mantine/modals @mantine/spotlight @mantine/notifications @mantine/form @mantine/dates dayjs @mantine/carousel embla-carousel-react
          npm install --save-dev postcss postcss-preset-mantine postcss-simple-vars

      - name: Build project
        run: cd web && npm run build

      - name: Compress build output with zip
        run: |
          mkdir -p ./temp/vHud
          mkdir -p ./temp/vHud/web/
          cp ./{LICENSE,README.md,fxmanifest.lua} ./temp/vHud
          cp -r ./shared ./temp/vHud
          cp -r ./client ./temp/vHud
          cp -r ./server ./temp/vHud
          cp -r ./web/build ./temp/vHud/web/
          cd ./temp && zip -r ../vHud.zip ./vHud

      - name: Get latest release version
        id: get_version
        run: echo "::set-output name=version::$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)"

      - name: Increment version by 0.1
        id: increment_version
        run: echo "::set-output name=version::$(php -r "echo bcadd('${{ steps.get_version.outputs.version }}', '0.1', 1);")"

      - name: Create and Upload Release
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ steps.increment_version.outputs.version }}
          prerelease: false
          files: vHud.zip
        env:
          CI: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
